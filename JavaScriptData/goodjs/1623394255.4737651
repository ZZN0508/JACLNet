YUI.add("af-applet-model",function(t){"use strict";var e=t.Af.Bootstrap,s=t.Af.Config,n=t.Af.Utils,i=t.Lang,a="context",o="data",r="guid",c="settings",g=["crumb","locdrop_crumb","lang","region"],l=n.perfStart,u=n.perfStop,p=s.get(a),d=s.get("transport");t.namespace("Af").AppletModel=t.Base.create("AfAppletModel",t.Model,[t.Mjata.JSON,t.Af.Sync],{idAttribute:r,settingsOpts:{critical:!1},settingsResource:"applet.settings",initializer:function(){var s,c=e.getMeta(this.get(r))||{},f={},h={silent:!0},m=this.get("type"),y={},x=t.merge(p,c.context),A=this;this.set(a,x,{silent:!0}),this.syncContext={config:t.merge(d,c.transport,{beaconMeta:{_appletType:m||""}}),context:{_appletType:m||""}},t.Array.forEach(g,function(t){x[t]&&(A.syncContext.context[t]=x[t])}),c.applet_type&&(y.applet_type=c.applet_type),c.i13n&&(y.i13n=c.i13n),c.i18n=t.merge(n.i18n("ape-applet/strings"),c.i18n),y.i18n=c.i18n,y.intl={locales:x.lang,messages:c.i18n},c.models&&(f=c.models.applet_model||{}),t.each(["config","data","state"],function(t){f[t]&&(y[t]=f[t])}),(f.settings||f.user_settings)&&(y.settings=f.settings||f.user_settings),this.setAttrs(y,h),f.models&&(l(s=m+":aptCreateDataModels"),t.Array.each(f.models,function(t){var s=e.createModel(this.get(r),t),n=this.get(o);s&&n&&(i.isObject(n[t])&&s.setAttrs(n[t],h),this.addDataModel(t,s))},this),u(s)),this.settingsResource="settings."+(y.applet_type||m)},addDataModel:function(e,s){s&&(this.get(o)[e]=s,(s._isYUIModel||s._isYUIModelList)&&(s.syncContext=this.syncContext,s.after(["*:change","reset","add","remove"],function(e){var s=t.merge(this.get(o));this.set(o,s,{submodel_evt:e})},this)))},getDataModel:function(t){return this.get(o)[t]},loadDataModel:function(e,s,n){var i,a=this;s=t.merge({resource:e},s),i={context:t.merge(a.syncContext.context,s.context&&s.context.context),config:t.merge(a.syncContext.config,s.context&&s.context.config)},t.Af.Transport.read(s.resource,s.params,i,function(t,s){return!t&&s&&a.set(o+"."+e,s),n&&n(t,s)})},setConfig:function(t,e){this.set("config."+t,e)},getSettings:function(){return this.get(c)},saveSettings:function(e,s,i){var a,o,g=this.get(c),l=this;if(t.Lang.isFunction(s)&&(i=s,s=null),i=i||n.noop,e=t.merge(g,e),(s=t.merge(this.settingsOpts,s)).critical===undefined&&(s.critical=this.settingsOpts.critical),n.objectEqual(g,e))i(null,e);else{if(a={resource:this.settingsResource,params:{guid:this.get(r)},body:e},o=n.userSignedIn(),!s.critical)return this.set(c,e),i(null,e),void(o&&this.save(a));o?this.save(a,function(t){t?i("ERR_SAVE_SETTINGS"):(l.set(c,e),i(null,e))}):i("ERR_AUTH")}}},{ATTRS:{guid:{},type:{},config:{value:{}},settings:{},user_settings:{getter:function(){return this.get(c)}},context:{value:{}},state:{value:{}},data:{value:{}}}})},"@VERSION@",{langBundles:["strings"],requires:["af-bootstrap","af-config","af-sync","base-build","mjata-json","model"]});